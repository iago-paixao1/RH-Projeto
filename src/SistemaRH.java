import javax.swing.*;
import java.util.ArrayList;
import java.util.List;
public class SistemaRH {
    private static List<Funcionario> listaFuncionarios = new ArrayList<>();

    public static void main(String[] args) {
        int opcao;

        do {
            String menu = """
                    === SISTEMA DE RH ===
                    1. Cadastrar FuncionÃ¡rio
                    2. Listar Todos os FuncionÃ¡rios
                    3. Pesquisar FuncionÃ¡rio por CÃ³digo
                    4. Pesquisar FuncionÃ¡rio por Nome
                    5. Editar Dados do FuncionÃ¡rio
                    6. Remover FuncionÃ¡rio
                    7. Mostrar FuncionÃ¡rio com Maior SalÃ¡rio
                    8. Mostrar FuncionÃ¡rio com Menor SalÃ¡rio
                    9. Listar FuncionÃ¡rios por Cargo
                    10. Calcular MÃ©dia Salarial
                    0. Sair
                    """;

            String entrada = JOptionPane.showInputDialog(menu + "\nEscolha uma opÃ§Ã£o:");
            if (entrada == null) break; // caso o usuÃ¡rio cancele
            opcao = Integer.parseInt(entrada);

            switch (opcao) {
                case 1 -> cadastrarFuncionario();
                case 2 -> listarFuncionarios();
                case 3 -> pesquisarPorCodigo();
                case 4 -> pesquisarPorNome();
                case 5 -> editarFuncionario();
                case 6 -> removerFuncionario();
                case 7 -> funcionarioMaiorSalario();
                case 8 -> funcionarioMenorSalario();
                case 9 -> listarPorCargo();
                case 10 -> calcularMediaSalarial();
                case 0 -> JOptionPane.showMessageDialog(null, "Encerrando o sistema...");
                default -> JOptionPane.showMessageDialog(null, "OpÃ§Ã£o invÃ¡lida!");
            }
        } while (true);
    }

    private static void cadastrarFuncionario() {
        int codigo = Integer.parseInt(JOptionPane.showInputDialog("Digite o cÃ³digo:"));
        String nome = JOptionPane.showInputDialog("Digite o nome:");
        String cargo = JOptionPane.showInputDialog("Digite o cargo:");
        double salario = Double.parseDouble(JOptionPane.showInputDialog("Digite o salÃ¡rio:"));

        listaFuncionarios.add(new Funcionario(codigo, nome, cargo, salario));
        JOptionPane.showMessageDialog(null, "âœ… FuncionÃ¡rio cadastrado com sucesso!");
    }

    private static void listarFuncionarios() {
        if (listaFuncionarios.isEmpty()) {
            JOptionPane.showMessageDialog(null, "âš  Nenhum funcionÃ¡rio cadastrado.");
        } else {
            StringBuilder sb = new StringBuilder("=== Lista de FuncionÃ¡rios ===\n");
            for (Funcionario f : listaFuncionarios) {
                sb.append(f).append("\n");
            }
            JOptionPane.showMessageDialog(null, sb.toString());
        }
    }

    private static void pesquisarPorCodigo() {
        int codigo = Integer.parseInt(JOptionPane.showInputDialog("Digite o cÃ³digo:"));
        for (Funcionario f : listaFuncionarios) {
            if (f.getCodigo() == codigo) {
                JOptionPane.showMessageDialog(null, f.toString());
                return;
            }
        }
        JOptionPane.showMessageDialog(null, "âš  FuncionÃ¡rio nÃ£o encontrado.");
    }

    private static void pesquisarPorNome() {
        String nome = JOptionPane.showInputDialog("Digite parte do nome:").toLowerCase();
        StringBuilder sb = new StringBuilder();
        for (Funcionario f : listaFuncionarios) {
            if (f.getNome().toLowerCase().contains(nome)) {
                sb.append(f).append("\n");
            }
        }
        JOptionPane.showMessageDialog(null, sb.length() > 0 ? sb.toString() : "âš  Nenhum funcionÃ¡rio encontrado.");
    }

    private static void editarFuncionario() {
        int codigo = Integer.parseInt(JOptionPane.showInputDialog("Digite o cÃ³digo do funcionÃ¡rio:"));
        for (Funcionario f : listaFuncionarios) {
            if (f.getCodigo() == codigo) {
                String nome = JOptionPane.showInputDialog("Novo nome (atual: " + f.getNome() + "):");
                if (nome != null && !nome.isEmpty()) f.setNome(nome);

                String cargo = JOptionPane.showInputDialog("Novo cargo (atual: " + f.getCargo() + "):");
                if (cargo != null && !cargo.isEmpty()) f.setCargo(cargo);

                String salarioStr = JOptionPane.showInputDialog("Novo salÃ¡rio (atual: " + f.getSalario() + "):");
                if (salarioStr != null && !salarioStr.isEmpty()) f.setSalario(Double.parseDouble(salarioStr));

                JOptionPane.showMessageDialog(null, "âœ… FuncionÃ¡rio atualizado!");
                return;
            }
        }
        JOptionPane.showMessageDialog(null, "âš  FuncionÃ¡rio nÃ£o encontrado.");
    }

    private static void removerFuncionario() {
        int codigo = Integer.parseInt(JOptionPane.showInputDialog("Digite o cÃ³digo:"));
        listaFuncionarios.removeIf(f -> f.getCodigo() == codigo);
        JOptionPane.showMessageDialog(null, "âœ… FuncionÃ¡rio removido (se existia).");
    }

    private static void funcionarioMaiorSalario() {
        if (listaFuncionarios.isEmpty()) {
            JOptionPane.showMessageDialog(null, "âš  Nenhum funcionÃ¡rio cadastrado.");
            return;
        }
        Funcionario maior = listaFuncionarios.get(0);
        for (Funcionario f : listaFuncionarios) {
            if (f.getSalario() > maior.getSalario()) maior = f;
        }
        JOptionPane.showMessageDialog(null, "ðŸ’° FuncionÃ¡rio com maior salÃ¡rio:\n" + maior);
    }

    private static void funcionarioMenorSalario() {
        if (listaFuncionarios.isEmpty()) {
            JOptionPane.showMessageDialog(null, "âš  Nenhum funcionÃ¡rio cadastrado.");
            return;
        }
        Funcionario menor = listaFuncionarios.get(0);
        for (Funcionario f : listaFuncionarios) {
            if (f.getSalario() < menor.getSalario()) menor = f;
        }
        JOptionPane.showMessageDialog(null, "ðŸ’° FuncionÃ¡rio com menor salÃ¡rio:\n" + menor);
    }

    private static void listarPorCargo() {
        String cargo = JOptionPane.showInputDialog("Digite o cargo:").toLowerCase();
        StringBuilder sb = new StringBuilder();
        for (Funcionario f : listaFuncionarios) {
            if (f.getCargo().toLowerCase().equals(cargo)) {
                sb.append(f).append("\n");
            }
        }
        JOptionPane.showMessageDialog(null, sb.length() > 0 ? sb.toString() : "âš  Nenhum funcionÃ¡rio encontrado.");
    }

    private static void calcularMediaSalarial() {
        if (listaFuncionarios.isEmpty()) {
            JOptionPane.showMessageDialog(null, "âš  Nenhum funcionÃ¡rio cadastrado.");
            return;
        }
        double soma = 0;
        for (Funcionario f : listaFuncionarios) {
            soma += f.getSalario();
        }
        double media = soma / listaFuncionarios.size();
        JOptionPane.showMessageDialog(null, "ðŸ“Š MÃ©dia salarial: R$ " + media);
    }
}